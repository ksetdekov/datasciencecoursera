https://www.r-graph-gallery.com/ - ghraph library


abline - horizontal line on graph
abline(v=median(ppm), col="magenta", lwd=4) - vertical
rug(ppm) -  vertical lines
names () -  names
boxplot(pm25~region, data = pollution, col="red") - 2 box plots by category!

2 histrograms 
par(mfrow=c(2,1),mar=c(4,4,2,1))
hist(east$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")

scatter plot
with(pollution, plot(latitude, pm25))

2 side by side
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))

?Devices - list graphic devices
title(main="Old Faithful Geyser data") - title for a graph

create pdf
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.off()

par() function - specify global graphic parameters
 dev.copy2pdf specifically copies a plot to a PDF output device
dev.off()

dev.copy(png, file="geyserplot.png") copy to a PNG output
dev.off()

## ggplot plotting
qplot(displ, hwy, data = mpg)

range(airquality$Ozone, na.rm = TRUE)

#fancy boxlot
 boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")

#base plotting parameters
?par 

#base plotting
plot(airquality$Wind, type="n",airquality$Ozone)
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month==5)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"), legend = c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)

# 2 side by side
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation"

#margins
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE) #outer name

#sql read
library(sqldf)
DataPath <- "../household_power_consumption.txt"

## Load only lines with date = 1/2/2007 or 2/2/2007
Data <- read.csv.sql(DataPath,
                     sql = "select * from file where Date in('1/2/2007','2/2/2007')",
                     head=TRUE, sep = ";")

#lattice plotting
# median draw for each factor
p <- xyplot(y ~ x | f, panel = function(x, y, ...) {
  panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
  panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
print(p)

# draw regression line
  panel.lmline(x, y, col = 2)  ## Overlay a simple linear regression line

gglot2(diamonds)


## colors
#make palette
> cols <- brewer.pal(3,"BuGn")
# make adjustable palette
> pal <- colorRampPalette(cols)
# use palette with interpolation
> image(volcano,col=pal(20))


##ggplot
qplot(displ, hwy, data = mpg)
# smooth lines can be added with 1 function call
qplot(displ, hwy, data = mpg, color = drv, geom=c("point", "smooth"))
qplot(drv, hwy, data = mpg, geom = "boxplot") #adding boxplots
#grouping by 2 variables 
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
# colored histogram
qplot( hwy, data = mpg, fill = drv)

#how to add panesl (facets) 
qplot( displ, hwy, data = mpg, facets = .~drv)

#creating ggplot graphical objects 
g <- ggplot(mpg,aes(displ,hwy))
g+geom_point() # to actually draw plot

#vertical column of facets with histograms
g <- ggplot(mpg,aes(displ,hwy))
qplot( displ, hwy, data = mpg, facets = .~drv)

#using ggplot
g <- ggplot(mpg,aes(displ,hwy))
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")

#adding changes to aes
g <- ggplot(mpg,aes(displ,hwy))
g+geom_point(color="pink", size=4, alpha = 1/2)

#labeling
g <- ggplot(mpg,aes(displ,hwy))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")

#modding regression lines
g <- ggplot(mpg,aes(displ,hwy))
g+geom_point(aes(color = drv), size=2, alpha = 1/2)+geom_smooth(size=4, linetype=3, method ="lm", se=FALSE)

#changing theme
g <- ggplot(mpg,aes(displ,hwy))
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")

#more complecated grid without margins and with factors
g <- ggplot(mpg,aes(displ,hwy))
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")

#filled hist
qplot(price, data=diamonds, binwidth = 18497/30, fill=cut)
#density plot
qplot(price, data=diamonds, geom="density", color=cut)
#color on a scatter plot
qplot(carat, price, data=diamonds, color=cut)

#with facets
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")

#with ggplot
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3) #with opacity

#cutting into factor
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4),na.rm = TRUE)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm", size=3, color="pink")

#boxplot
ggplot(diamonds, aes(carat,price))+geom_boxplot()+facet_grid(.~cut)

#distantce between all 
dist(dataFrame)
hc <- hclust(distxy) #cluster
plot(as.dendrogram(hc))

#metrics for distance - complete linkage, the biggest distance between all combination of distances of points in 2 clusters
#heatmap tutorial 
http://sebastianraschka.com/Articles/heatmaps_in_r.html#clustering

#heatmap
heatmap(dataMatrix, col=cm.colors(25)) # jutst matrix - gives heat map

#find what row has minimal for each column
apply(distTmp,2,which.min)

#kmeans
kmeans(dataFrame, centers = 3)
#plot kmeans
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
#plot centroids
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)

#plot just kmeans result with 5 clusters
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)

#PCA alysis
nice concise paper on this subject which can be found at http://arxiv.org/pdf/1404.1100.pdf. The paper by Jonathon Shlens of Google Research is called, A Tutorial on Principal Component Analysis.

prcomp(scale(mat)) # PCA
svd(scale(mat)) #svd


#estimation of the original matrix from partial first components of SVD
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])

#using svd to find variable that contribute to clustering most
svd1 <- svd(scale(sub1[,-c(562,563)]))
maxCon  <- which.max(svd1$v[,2]) #second right singular vector of the decomposition
mdist <- dist(sub1[,c(10:12,maxCon)]) 
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col =unclass(sub1$activity))
names(sub1[maxCon]) #result


#kmeans with many iterations
kClust <- kmeans(sub1[,-c(562:563)],6, nstart = 100)
table(kClust$cluster, sub1$activity)


# use aggregate!
annual_emissions <- aggregate(Emissions ~ year, data = NEI, FUN = sum)

#use geom - bars!!
rm(list = ls(all = TRUE))
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCCdata <- SCC[grepl("Coal" , SCC$Short.Name), ]
NEIdata <- NEI[NEI$SCC %in% SCCdata$SCC, ]

plot4 <- ggplot(NEIdata, aes(x = factor(year), y = Emissions, fill =type)) +
geom_bar(stat= "identity", width = .4) + xlab("year") + ylab("Total Tons of PM2.5 Emissions") +
ggtitle("Total Tons of PM2.5 Emissionsin the United States")
print(plot4)

dev.copy(png, file = "plot.4.png", height = 480, width = 480)
dev.off()